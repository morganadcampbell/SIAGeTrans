***Starting server on port 60470 ***
Loading net-file from 'sumo_simulation/sumo_elements/test.net.xml' ... done (5ms).
Loading additional-files from 'sumo_simulation/sumo_elements/test.add.xml' ... done (33ms).
Warning: Unused states in tlLogic 'J4', program '0' in phase 0 after tl-index 15
Warning: Missing yellow phase in tlLogic 'J4', program '0' for tl-index 1 when switching to phase 1.
Warning: Missing yellow phase in tlLogic 'J4', program '0' for tl-index 4 when switching to phase 4.
Warning: Missing green phase in tlLogic 'J4', program '0' for tl-index 16.
Loading route-files incrementally from 'sumo_simulation/sumo_elements/test.rou.xml'
Loading done.
Simulation version 1.23.1 started with time: 0.00.
Simulation ended at time: 10187.00.
Reason: TraCI requested termination.
Performance:
 Duration: 99.76s
 TraCI-Duration: 95.44s
 Real time factor: 102.118
 UPS: 1690.327496
 UPS-Persons: 2357.157894
Vehicles:
 Inserted: 3140
 Running: 0
 Waiting: 0
Persons:
 Inserted: 1518
 Running: 0
Statistics (avg of 3140):
 RouteLength: 189.84
 Speed: 4.90
 Duration: 53.70
 WaitingTime: 24.62
 TimeLoss: 34.35
 DepartDelay: 0.26
Pedestrian Statistics (avg of 1518 walks):
 RouteLength: 155.69
 Duration: 154.90
 TimeLoss: 41.87
DijkstraRouter answered 48202 queries and explored 23.65 edges on average.
DijkstraRouter spent 0.21s answering queries (0.00ms on average).
DijkstraRouter answered 1518 queries and explored 32.00 edges on average.
DijkstraRouter spent 0.01s answering queries (0.00ms on average).

-----------------------------------------------------------
**** Adding simulation parameters from Sumo Controller ****
t.get('RunAdaptation')= 1
t.get('MinimumTime')= 15
t.get('MaximumTime')= 45
t.get('CurrentTemperature')= 10
t.get('MaxTemperature')= 30
t.get('MinTemperature')= 10
t.get('EmergencyVehiclePriorization')= 0
t.get('FloodingPriorization')= 0
t.get('WeatherPriorization')= 0                        
t.get('personPerCarFactor')= 1.54
t.get('MaximumVehicleSpeed')= 16.67
t.get('floodedVehicleSpeed')= 4.17
t.get('floodedLanes')= ['E1_2', 'E1_1', 'E3_2']
defaultVehicleFlowProbability= 0.04
emrgVehicleFlowProbability= 0.001
pedestrianFlowProbability= 0.04                        
adaptationInterval= 600
numberOfPhases= 3
fixedPhaseTime= 30
waitingTime= 5
cicleFullTime= 105
edges= ['E1', 'E2', 'E3', 'E4']
crosswalk= [':J4_c0', ':J4_c1', ':J4_c2', ':J4_c3']
entrySensors= ['e2_r1_in_1', 'e2_r1_in_2', 'e2_r2_in_1', 'e2_r2_in_2', 'e2_r3_in_1', 'e2_r3_in_2', 'e2_r4_in_1', 'e2_r4_in_2']
exitSensors= ['e2_r1_out_1', 'e2_r1_out_2', 'e2_r2_out_1', 'e2_r2_out_2', 'e2_r3_out_1', 'e2_r3_out_2', 'e2_r4_out_1', 'e2_r4_out_2']
entrySensorsPerPhase= [['e2_r4_in_2', 'e2_r2_in_2'], ['e2_r1_in_2', 'e2_r3_in_2'], ['e2_r1_in_1', 'e2_r2_in_1', 'e2_r3_in_1', 'e2_r4_in_1']]
exitSensorsPerPhase= [['e2_r4_out_1', 'e2_r2_out_2'], ['e2_r1_out_2', 'e2_r3_out_2'], ['e2_r1_out_1', 'e2_r2_out_1'], ['e2_r3_out_1', 'e2_r4_out_2']]                        
lanePerPhase= [['E2_2', 'E4_2'], ['E1_2', 'E3_2'], ['E1_1', 'E2_1', 'E3_1', 'E4_1']]
crosswalkPerPhase= [[':J4_c1', ':J4_c3'], [':J4_c0', ':J4_c2'], []]
PeopleEdgePerPhase= [['E2', 'E4'], ['E1', 'E3'], []]
trafficLightTimes= [[15, 30, 45], [15, 30, 45], [15, 30, 45], [15, 30, 45], [15, 30, 45], [15, 30, 45], [15, 30, 45], [29, 28, 33], [29, 28, 33], [29, 28, 33], [29, 28, 33], [29, 28, 33], [29, 28, 33], [29, 28, 33], [29, 28, 33], [29, 28, 33], [29, 28, 33], [29, 28, 33], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [25, 45, 20], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [24, 31, 35], [27, 45, 18], [27, 45, 18], [27, 45, 18], [24, 28, 38], [24, 28, 38], [24, 28, 38], [24, 28, 38], [24, 28, 38], [24, 28, 38], [24, 28, 38], [24, 28, 38], [24, 28, 38], [33, 21, 36], [33, 21, 36], [33, 21, 36], [33, 21, 36], [33, 21, 36], [33, 21, 36], [33, 21, 36], [33, 21, 36], [33, 21, 36], [33, 21, 36], [33, 21, 36], [23, 29, 38], [23, 29, 38], [23, 29, 38], [23, 29, 38], [23, 29, 38], [23, 29, 38], [23, 29, 38], [23, 29, 38], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 23, 34], [33, 15, 42], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [24, 45, 21], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [15, 45, 30], [32, 32, 26], [32, 32, 26], [32, 32, 26], [32, 30, 28], [32, 30, 28], [32, 30, 28], [32, 30, 28], [32, 30, 28], [32, 30, 28], [32, 30, 28], [32, 30, 28], [36, 15, 39], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38], [27, 25, 38]]
t.get('trafficImbalanceFrequency')= 20
t.get('trafficImbalanceFactor')= 0                        
WeightedTimeLoss= 36.80069987118935
WeightedDuration= 86.68016316015458
WeatherVariance= 100.0
WeatherVariationFactor= 1.0                        
timeLossMap= {'-E1_0': None, '-E1_1': '452.59', '-E1_2': '393.09', '-E2_0': None, '-E2_1': '381.13', '-E2_2': '485.10', '-E3_0': None, '-E3_1': '424.93', '-E3_2': '414.33', '-E4_0': None, '-E4_1': '367.10', '-E4_2': '421.46', 'E1_0': None, 'E1_1': '10255.95', 'E1_2': '18504.45', 'E2_0': None, 'E2_1': '8322.73', 'E2_2': '13859.17', 'E3_0': None, 'E3_1': '9565.81', 'E3_2': '16812.80', 'E4_0': None, 'E4_1': '9382.10', 'E4_2': '15670.16'}
waitingTimeMap= {'-E1_0': None, '-E1_1': '0.00', '-E1_2': '0.00', '-E2_0': None, '-E2_1': '0.00', '-E2_2': '0.00', '-E3_0': None, '-E3_1': '0.00', '-E3_2': '0.00', '-E4_0': None, '-E4_1': '0.00', '-E4_2': '0.00', 'E1_0': None, 'E1_1': '7635.00', 'E1_2': '14898.00', 'E2_0': None, 'E2_1': '5293.00', 'E2_2': '10886.00', 'E3_0': None, 'E3_1': '6432.00', 'E3_2': '13461.00', 'E4_0': None, 'E4_1': '6210.00', 'E4_2': '12381.00'}
floodedWaitingTimeMap= {'E1_1': '7635.00', 'E1_2': '14898.00', 'E3_2': '13461.00'}
totalWaitingTime= 77196.0
totalFloodedWaitingTime= 35994.0
adjustedFloodedWaitingTime= 0.4662676822633297                        
floodedTimeLossMap= {'E1_1': '10255.95', 'E1_2': '18504.45', 'E3_2': '16812.80'}
totalTimeLoss= 105712.9
totalFloodedTimeLoss= 45573.2
adjustedFloodedTimeLoss= 0.43110348878897464                        
CO2EmissionAvg= 122372.85506586017
fuelUseAvg= 39666.14156144173
EmrgWaitingTimeAvg= 27.86111111111111
EmrgTimeLossAvg= 37.35888888888889
EmrgDurationAvg= 59.05555555555556